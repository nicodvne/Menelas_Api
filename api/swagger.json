{
  "openapi": "3.0.0",
  "info": {
    "title": "Simple Inventory API",
    "description": "This is a simple API",
    "contact": {
      "email": "you@your-company.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "v1"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/JEREMYKRZECZOWSKI77/API_Menelas/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Users operations"
    }
  ],
  "paths": {
    "/user/getAll": {
      "get": {
        "tags": [
          "developers"
        ],
        "summary": "get all users infos",
        "description": "Get all users stored in database\n",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "get results matching criteria",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserAll"
                  }
                }
              }
            }
          },
          "500": {
            "description": "db connection error"
          }
        }
      }
    },
    "/user/getByEmail": {
      "post": {
        "tags": [
          "developers"
        ],
        "summary": "Get User by Email",
        "description": "Get all users stored in database\n",
        "operationId": "getUserByEmail",
        "requestBody": {
          "description": "User to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestGetByEmail"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "get user matching criteria"
          },
          "204": {
            "description": "No user mathing"
          },
          "500": {
            "description": "Exception has been raised"
          }
        }
      }
    },
    "/user/create": {
      "post": {
        "tags": [
          "developers"
        ],
        "summary": "Add an user",
        "description": "Add ( or update if exists ) user to db",
        "operationId": "addUser",
        "requestBody": {
          "description": "User to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserAdd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/200UserAll"
                  }
                }
              }
            }
          },
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/201UserAll"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing informations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/400UserAll"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Exception has been raised"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "UserAll": {
        "required": [
          "firstname",
          "height",
          "lastname",
          "mail",
          "phoneNumber",
          "weight"
        ],
        "type": "object",
        "properties": {
          "mail": {
            "type": "string",
            "example": "emailtest@test.com"
          },
          "lastname": {
            "type": "string",
            "example": "LastName"
          },
          "firstname": {
            "type": "string",
            "example": "FirstName"
          },
          "height": {
            "type": "integer",
            "example": 175
          },
          "weight": {
            "type": "integer",
            "example": 75
          },
          "phoneNumber": {
            "type": "string",
            "example": "0600000000"
          }
        }
      },
      "200UserAll": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User updated"
          }
        }
      },
      "201UserAll": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User added"
          }
        }
      },
      "400UserAll": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Informations manquantes"
          }
        }
      },
      "UserAdd": {
        "required": [
          "firstname",
          "lastname",
          "mail"
        ],
        "type": "object",
        "properties": {
          "mail": {
            "type": "string",
            "example": "emailtest@test.com"
          },
          "lastname": {
            "type": "string",
            "example": "LastName"
          },
          "firstname": {
            "type": "string",
            "example": "FirstName"
          }
        }
      },
      "RequestGetByEmail": {
        "required": [
          "mail"
        ],
        "type": "object",
        "properties": {
          "mail": {
            "type": "string",
            "example": "emailtest@test.com"
          }
        }
      }
    }
  }
}